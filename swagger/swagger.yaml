swagger: '2.0'
info:
   title: Bank Argent API documentation
   description: Contains all available API endpoints in this codebase
   version: '1.0.0'
   termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
   - http
paths:
   /user/login:
      post:
         tags:
            - User Module
         summary: Login
         description: API for Login
         parameters:
            - in: body
              name: body
              description: Login Payload
              required: true
              schema:
                 $ref: '#/definitions/Login'
         produces:
            - application/json
         responses:
            '200':
               description: Login Successfully
               schema:
                  $ref: '#/definitions/LoginResponse'
            '400':
               description: Invalid Fields
            '500':
               description: Internal Server Error
   /user/signup:
      post:
         tags:
            - User Module
         summary: Signup
         description: API for Signup
         parameters:
            - in: body
              name: body
              description: Signup Payload
              required: true
              schema:
                 $ref: '#/definitions/User'
         produces:
            - application/json
         responses:
            '200':
               description: Signup Successfully
               schema:
                  $ref: '#/definitions/ApiResponse'
            '400':
               description: Invalid Fields
            '500':
               description: Internal Server Error
   /user/profile:
      post:
         security:
            - Bearer: []
         tags:
            - User Module
         summary: User Profile API
         description: API for fetching a user profile
         parameters:
            - in: header
              name: Authorization
              description: Attach Bearer JWT token
              required: true
         produces:
            - application/json
         responses:
            '200':
               description: User profile retrieved successully
               schema:
                  $ref: '#/definitions/ApiResponse'
            '400':
               description: Invalid Fields
            '500':
               description: Internal Server Error
      put:
         security:
            - Bearer: []
         tags:
            - User Module
         summary: User Profile API
         description: API for updating a user profile
         parameters:
            - in: header
            name: Authorization
            description: Attach Bearer JWT token
            required: true
            - in: body
            name: body
            description: Update user profile attributes
            required: true
            schema:
               $ref: '#/definitions/UserProfile'
         produces:
            - application/json
         responses:
            '200':
               description: User profile retrieved successully
               schema:
                  $ref: '#/definitions/ApiResponse'
            '400':
               description: Invalid Fields
            '500':
               description: Internal Server Error
 /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      description: Get all transactions if user is connected
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token.
          type: string
          required: true
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/TransactionsResponse'
        400:
          description: Invalid Transaction Description Supplied
        404:
          description: Transaction Not Found
        500:
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      description: Create a transaction's description
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token.
          type: string
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionDescription'
      responses:
        201:
          description: Successful Operation
        400:
          description: Invalid Transaction Description Supplied
        404:
          description: Transaction Not Found
        500:
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      description: Get a transaction if user is connected
      produces:
        - application/json
      parameters:
        - in: path
          name: transactionId
          required: true
          type: integer
        - in: header
          name: Authorization
          description: Attach Bearer JWT token.
          type: string
          required: true
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/TransactionResponse'
        400:
          description: Invalid Transaction Description Supplied
        404:
          description: Transaction Not Found
        500:
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      description: Update a transaction's description
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: transactionId
          required: true
          type: integer
        - in: header
          name: Authorization
          description: Attach Bearer JWT token.
          type: string
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionDescription'
      responses:
        204:
          description: Successful Operation
        400:
          description: Invalid Transaction Description Supplied
        404:
          description: Transaction Not Found
        500:
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions
      description: Delete a transaction's description
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to delete
          type: integer
          required: true
        - in: header
          name: Authorization
          description: Attach Bearer JWT token.
          type: string
          required: true
      responses:
        204:
          description: Successful Operation
        400:
          description: Invalid Transaction Supplied
        404:
          description: Transaction Not Found
        500:
          description: Internal Server Error
securityDefinitions:
   Bearer:
      type: apiKey
      name: Authorization
      in: header
definitions:
   User:
      properties:
         email:
            type: string
            description: user email
         password:
            type: string
            description: user password
         firstName:
            type: string
            description: user first name
         lastName:
            type: string
            description: user last name
   Login:
      properties:
         email:
            type: string
            description: user email
         password:
            type: string
            description: user password
   ApiResponse:
      type: object
      properties:
         status:
            type: integer
         message:
            type: string
         body:
            type: object
            properties:
               id:
                  type: string
               email:
                  type: string
   LoginResponse:
      type: object
      properties:
         token:
            type: string
   UserProfile:
      type: object
      properties:
         firstName:
            type: string
         lastName:
            type: string
